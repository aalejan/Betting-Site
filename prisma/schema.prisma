// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  bets          Bet[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

enum BetType {
  h2h
  spread
}

enum BetStatus {
  in_progress
  completed
}

enum BetOutcome {
  win
  loss
}

model Bet {
  id             String   @id @default(cuid())
  userId         String
  teamBetOn      String   // The team that the user is betting on
  teamBetAgainst String   // The team that the user is betting against
  amount         Float
  potentialWinnings Float? // The potential winnings if the bet is in progress
  profitOrLoss  Float?   // The actual winnings if the bet is completed
  type           BetType   // This line is new
  oddsTaken      Float     // The odds taken when the bet was placed
  betStatus      BetStatus // The current status of the bet
  betOutcome BetOutcome // The outcome of the bet
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  user           User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}